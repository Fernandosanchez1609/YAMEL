AWSTemplateFormatVersion: 2010-09-09
Description: Plantilla Basica
Parameters:
  AmiId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: "/aws/service/canonical/ubuntu/server/22.04/stable/current/amd64/hvm/ebs-gp2/ami-id"
  AmiType:
    Type: String
    Default: t2.small
    AllowedValues:
      - t2.small
      - t2.nano
      - t2.micro
Resources:
  NewSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: grupo de seguridad 
      GroupName: tomcat 
      SecurityGroupIngress: 
        - IpProtocol: TCP
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: TCP
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
  Tomcat:
    Type: AWS::EC2::Instance
    CreationPolicy:
      ResourceSignal:
        Timeout: PT5M
        Count: 1
    Properties:
      ImageId: !Ref AmiId
      InstanceType: !Ref AmiType
      KeyName: vockey
      SecurityGroups:
        - !Ref NewSecurityGroup
      UserData: 
        Fn::Base64: 
          !Sub |
            #!/bin/bash -xe
            exec > /tmp/userdata.log 2>&1
            
            apt update -y
            apt upgrade -y
            apt install -y python3-pip git openjdk-21-jdk maven
            
            pip3 install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-py3-latest.tar.gz
            
            useradd -m -d /opt/tomcat -U -s /bin/false tomcat
            
            cd /tmp
            wget https://dlcdn.apache.org/tomcat/tomcat-11/v11.0.2/bin/apache-tomcat-11.0.2.tar.gz
            tar xzvf apache-tomcat-11*tar.gz -C /opt/tomcat --strip-components=1
            
            chown -R tomcat:tomcat /opt/tomcat/
            chmod -R u+x /opt/tomcat/bin
            
            sed -i '/<\/tomcat-users>/i \
            <role rolename="manager-gui" />\n<user username="manager" password="manager_password" roles="manager-gui" />\n<role rolename="admin-gui" />\n<user username="admin" password="admin_password" roles="manager-gui,admin-gui" />' /opt/tomcat/conf/tomcat-users.xml
            
            sed -i '/<Valve /,/\/>/ s|<Valve|<!--<Valve|; /<Valve /,/\/>/ s|\/>|/>-->|' /opt/tomcat/webapps/manager/META-INF/context.xml
            sed -i '/<Valve /,/\/>/ s|<Valve|<!--<Valve|; /<Valve /,/\/>/ s|\/>|/>-->|' /opt/tomcat/webapps/host-manager/META-INF/context.xml
            
            echo '[Unit]
            Description=Tomcat
            After=network.target
            
            [Service]
            Type=forking
            
            User=tomcat
            Group=tomcat
            
            Environment="JAVA_HOME=/usr/lib/jvm/java-21-openjdk-amd64"
            Environment="CATALINA_BASE=/opt/tomcat"
            Environment="CATALINA_HOME=/opt/tomcat"
            Environment="CATALINA_PID=/opt/tomcat/temp/tomcat.pid"
            Environment="CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC"
            
            ExecStart=/opt/tomcat/bin/startup.sh
            ExecStop=/opt/tomcat/bin/shutdown.sh
            
            RestartSec=10
            Restart=always
            
            [Install]
            WantedBy=multi-user.target' | sudo tee /etc/systemd/system/tomcat.service
            
            systemctl daemon-reload
            systemctl start tomcat
            systemctl enable tomcat
            
            # Clonar y desplegar aplicación
            cd /tmp
            git clone https://github.com/DavidHormigoRamirez/studentify.git
            cd studentify
            
            # Dar permisos de ejecución a Gradle Wrapper
            chmod +x gradlew
            
            # Compilar la aplicación con Gradle
            ./gradlew build
            
            # Mover el archivo .war a Tomcat
            cp build/libs/studentify-1.0.0.war /opt/tomcat/webapps/studentify.war
            
            
            /usr/local/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource Tomcat --region ${AWS::Region}